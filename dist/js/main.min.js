// поиск кнопки по идентификатору
var hamburgerButton = document.querySelector('#hamburger');

// поиск меню по идентификатору
var hamburgerMenu = document.querySelector('#hamburgerMenu');
let links = document.querySelectorAll('.menu__link');

// слушаем события на кнопке
// при клике снимаем и возвращаем активный класс на кнопку и меню

hamburgerButton.addEventListener('click', toggleMenu);

function toggleMenu(event) {
  event.preventDefault();
  hamburgerButton.classList.toggle('hamburger--active');
  hamburgerMenu.classList.toggle('menu--active');
};

links.forEach(function(element) {
  element.addEventListener('click', toggleMenu);
});

//Слайдер-карусель

const slider = $('.offers').bxSlider({
  pager: false,
  controls: false
});

$('.offers-slider__arrow--left').click(e => {
  e.preventDefault();

  slider.goToPrevSlide();
});

$('.offers-slider__arrow--right').click(e => {
  e.preventDefault();

  slider.goToNextSlide();
});

//Слайдшоу - переключение
const findBlockByAlias = (alias) => {
  return $(".reviews__item").filter((ndx, item) => {
    return $(item).attr("data-chain") === alias;
  });
};

$(".reviews-switcher__link").click((e) => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const target = $this.attr("data-open");
  const itemToShow = findBlockByAlias(target);
  const curItem = $this.closest(".reviews-switcher__item");

  itemToShow.addClass("active").siblings().removeClass("active");
  curItem.addClass("active").siblings().removeClass("active");
});

//Вертикальный аккордеон
const openItem = (item) => {
  const container = item.closest(".team__item");
  const contentBlock = container.find(".team__content");
  const textBlock = contentBlock.find(".team__content-block");
  const reqHeight = textBlock.height();

  container.addClass("active");
  contentBlock.height(reqHeight);
};

const closeEveryItem = (container) => {
  const items = container.find(".team__content");
  const itemContainer = container.find(".team__item");

  itemContainer.removeClass("active");
  items.height(0);
};

$('.team__title').click((e) => {
  const $this = $(e.currentTarget);
  const container = $this.closest('.team');
  const elemContainer = $this.closest(".team__item");
  
  if (elemContainer.hasClass("active")) {
    closeEveryItem(container);
  } else {
    closeEveryItem(container);
    openItem($this);
  }
}); 

//Форма
const validateFields = (form, fieldsArray) => {
  fieldsArray.forEach((field) => {
    field.removeClass("input-error");
    if (field.val().trim() === "") {
      field.addClass("input-error");
    }
  });

  const errorFields = form.find(".input-error");

  return errorFields.length === 0;
}

$(".form").submit(e => {
  e.preventDefault();

  const form = $(e.currentTarget);
  const name = form.find("[name='name']");
  const phone = form.find("[name='phone']");
  const comment = form.find("[name='comment']");
  const to = form.find("[name='to']");

  const modal = $("#modal");
  const content = modal.find(".modal__content");

  modal.removeClass("error-modal");

  const isValid = validateFields(form, [name, phone, comment, to]);

  if (isValid) {
    const request = $.ajax({
      url: "https://webdev-api.loftschool.com/sendmail",
      method: "post",
      data: {
        name: name.val(),
        phone: phone.val(),
        comment: comment.val(),
        to: to.val(),
      }
    });
    request.done((data) => {
      content.text(data.message);
    });
    request.fail((data) => {
      const message = data.responseJSON.message;
      content.text(message);
      modal.addClass("error-modal");
    });
    request.always(() => {
      $.fancybox.open({
        src: "#modal",
        type: "inline"
      });
    });
  }
});

$(".app-submit-btn").click(e => {
  e.preventDefault();

  $.fancybox.close();
});

//Горизонтальный аккордеон
const mesureWidth = (unit) => {
  let reqUnitWidth = 0;
  const screenWidth = $(window).width();
  const container = unit.closest(".products__list");
  const titlesBlocks = container.find(".product__title");
  const titlesWidth = titlesBlocks.width() * titlesBlocks.length;

  const textContainer = unit.find(".product__container");
  const paddingLeft = parseInt(textContainer.css("padding-left"));
  const paddingRight = parseInt(textContainer.css("padding-right"));

  const isTablet = window.matchMedia("(max-width: 768px)").matches;
  const isMobile = window.matchMedia("(max-width: 480px)").matches;
  
  if (isTablet) {
    reqUnitWidth = screenWidth - titlesWidth;
  } 
  if (isMobile) {
    reqUnitWidth = screenWidth - titlesBlocks.width();
  } 
  
  if (!isTablet && !isMobile) {
    reqUnitWidth = 524;
  }

  return {
    container: reqUnitWidth,
    textContainer: reqUnitWidth - paddingRight - paddingLeft
  }
};

const closeEveryUnitInContainer = container => {
  const units = container.find(".products__item");
  const content = container.find(".product__content");

  units.removeClass("active");
  content.width(0);
};

const openUnit = (unit) => {
  const hiddenContent = unit.find(".product__content");
  const reqWidth = mesureWidth(unit);
  const textBlock = unit.find(".product__container");

  unit.addClass("active");
  hiddenContent.width(reqWidth.container);
  textBlock.width(reqWidth.textContainer);
};

$(".product__title").on("click", e => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const unit = $this.closest(".product");
  const unitOpened = unit.hasClass("active");
  const container = $this.closest(".products__list");

  if (unitOpened) {
    closeEveryUnitInContainer(container);
  } else {
    closeEveryUnitInContainer(container);
    openUnit(unit);
  }
});

//Видеоплеер
let video;
let durationControl;
let soundControl;
let intervalId;

// кнопки
const playBtn = document.querySelector(".video__player-img");
const soundBtn = document.querySelector(".sound");
const playerPlayBtn = document.querySelector(".duration__img");


video = document.getElementById("player");

// как только плеер загрузится
// video.addEventListener('loadeddata', function() {
    // вешаем обработчик события onclick на тег video
    video.addEventListener('click', playStop);

    // обработчики событий для кнопок play
    let playButtons = document.querySelectorAll(".play");
    for (let i = 0; i < playButtons.length; i++) {
        playButtons[i].addEventListener('click', playStop);
    }

    // обработчик событий для кнопки динамик
    let micControl = document.getElementById("mic");
    micControl.addEventListener('click', soundOf);

    // обработчики событий для ползунка продолжительности видео
    durationControl = document.getElementById("durationLevel");
    durationControl.addEventListener('input', setVideoDuration);

    durationControl.min = 0;
    durationControl.value = 0;
    // присваиваем ползунку продолжительности максимальное значение равное продолжительности нашего видео (в секундах)
    durationControl.max = video.duration;

    // обработчики событий для ползунка громокости
    soundControl = document.getElementById("micLevel");
    soundControl.addEventListener('input', changeSoundVolume);
    // soundControl.addEventListener('onmousemove', changeSoundVolume);

    // задаем максимальные и минимальные значения громокости
    soundControl.min = 0;
    soundControl.max = 10;
    // soundControl.step = 1;
    // присваиваем ползунку максимальное значение
    soundControl.value = soundControl.max;


    //обрабатываем окончание видео
    video.addEventListener('ended', function() {
        playBtn.classList.toggle("video__player-img--active");
        video.currentTime = 0;
        playerPlayBtn.classList.remove('active');
    });
// });



/*
 Воспроизведение видео
*/
function playStop() {
    // показывает или скрывает белую кнопку play
    playBtn.classList.toggle("video__player-img--active");

    // проверим стоит ли видео на паузе, если да то продолжим воспроизведение.

    if (video.paused) {
        // запускаем видео
        video.play();
        // Включаем функцию обновления прогресса
        intervalId = setInterval(updateDuration, 1000 / 60);
        // превращаем маленькую кнопку play в pause
        playerPlayBtn.classList.add('active');
        // Если, наоборот, проигрыавыется, то остановим.
    } else {
        // останавливаем видео
        video.pause();
        // останавливаем обновление прогресса
        clearInterval(intervalId);
        // превращаем маленькую кнопку pause в play
        playerPlayBtn.classList.remove('active');
    }
}

/*
    Реализует возможность перемотки нашего видео
*/
function setVideoDuration() {
    // установить значение ползунка в текущее время
    video.currentTime = durationControl.value;
    updateDuration();
    // intervalId = setInterval(updateDuration, 1000 / 60);
}


/*
  Функция для обновления позиции ползунка продолжительности видео.   
*/
function updateDuration() {
    // устанавливаем в наш инпут текущее время
    durationControl.value = video.currentTime;
    // рассчитываем процент для закраски прогресса
    let step = video.duration / 100;
    let percent = video.currentTime / step;
    // устанавливаем стили
    durationControl.style.background = `linear-gradient(90deg, #FEDB3F 0%, #FEDB3F ${percent}%, #626262 ${percent}%)`;

}


/*
    Управление звуком
*/
function soundOf() {
    /*
        Делаем проверку уровня громкости. 
        Если у нас нашего видео есть звук, то мы его выключаем. 
        Предварительно запомнив текущую позицию громкости в переменную soundLevel
    */
    if (video.volume === 0) {
        video.volume = soundLevel;
        soundControl.value = soundLevel * 10;
        soundBtn.classList.remove('active');
    } else {
        /*
            Если у нашего видео нет звука, то выставляем уровень громкости на прежний уровень.
            Хранится в перменной soundLevel
        */
        soundLevel = video.volume;
        video.volume = 0;
        soundControl.value = 0;
        soundBtn.classList.add('active');

    }
}

/*
    Управление звуком видео
*/
function changeSoundVolume() {
    /*
        Св-во volume может принимать значения от 0 до 1
        Делим на 10 для того что бы, была возможность более точной регулировки видео. 
   video.volume 0 .... 1 
   soundControl 0 .... 10
        */

    video.volume = soundControl.value / 10;
    if (video.volume == 0) {
        soundBtn.classList.add('active');
    } else {
        soundBtn.classList.remove('active');
    }
    console.log('значение volume у видео ' + video.volume);
    console.log('значение value у micLevel ' + soundControl.value / 10);
    /**У ползунка изначально задано минимальное значение 0 и максимальное 10 чтоб дать нам 10 положений
     * регулировки
     */
}

//Карта
let myMap;
const init = () => {
 myMap = new ymaps.Map("map", {
   center: [55.752132, 37.622807],
   zoom: 13,
   controls: [],
 });
 
 let coords = [
     [55.759211, 37.582637],
     [55.749662, 37.603889],
     [55.743069, 37.580987],
     [55.756917, 37.620619],
   ],
   myCollection = new ymaps.GeoObjectCollection({}, {
     draggable: false,
     iconLayout: 'default#image',
     iconImageHref: './img/icons/marker.svg',
     iconImageSize: [58, 73],
     iconImageOffset: [-35, -52]
   });
 
 for (let i = 0; i < coords.length; i++) {
   myCollection.add(new ymaps.Placemark(coords[i]));
 }
 
 myMap.geoObjects.add(myCollection);
 
 myMap.behaviors.disable('scrollZoom');
};
 
ymaps.ready(init);

//One page scroll
const sections = $("section");
const display = $(".maincontent");
const sideMenu = $(".fixed-menu");
const menuItems = sideMenu.find(".fixed-menu__item");

const mobileDetect = new MobileDetect(window.navigator.userAgent);
const isMobile = mobileDetect.mobile();

let inScroll = false;

sections.first().addClass("active");

const countSectionPosition = (sectionEq) => {
  const position = sectionEq * -100;

  if (isNaN(position)) {
    console.error("передано неверное значение в countSectionPosition");
    return 0;
  }
  
  return position;
};

const changeMenuThemeForSection = sectionEq => {
  const currentSection = sections.eq(sectionEq);
  const menuTheme = currentSection.attr("data-sidemenu-theme");
  const activeClass = "fixed-menu--shadowed";

  if (menuTheme === "black") {
    sideMenu.addClass(activeClass);
  } else {
    sideMenu.removeClass("fixed-menu--shadowed");
  }
};

const resetActiveClassForItem = (items, itemEq, activeClass) => {
  items.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
}

const performTransition = (sectionEq) => {
  if (inScroll) return;

  const transitionOver = 1000;
  const mouseInertiaOver = 300;

  inScroll = true;

  const position = countSectionPosition(sectionEq);

  changeMenuThemeForSection(sectionEq);

  display.css({
    transform: `translateY(${position}%)`
  });

  resetActiveClassForItem(sections, sectionEq, "active");

  setTimeout(() => {
    inScroll = false;

    resetActiveClassForItem(menuItems, sectionEq, "fixed-menu__item--active");
  }, transitionOver + mouseInertiaOver);
};

const viewportScroller = () => {
  const activeSection = sections.filter(".active");
  const nextSection = activeSection.next();
  const prevSection = activeSection.prev();

  return {
    next() {
      if (nextSection.length) {
        performTransition(nextSection.index())
      }
    },
    prev() {
      if (nextSection.length) {
        performTransition(prevSection.index())
      }
    },
  };
};

$(window).on("wheel", e => {
  const deltaY = e.originalEvent.deltaY;
  const scroller = viewportScroller();

  if (deltaY > 0) {
    scroller.next();
  }

  if (deltaY < 0) {
    scroller.prev();
  }
});

$(window).on("keydown", e => {
  const tagName = e.target.tagName.toLowerCase();
  const userTypingInInputs = tagName === "input" || tagName === "textarea";
  const scroller = viewportScroller();

  if (userTypingInInputs) return;

  switch (e.keyCode) {
    case 38: //prev
    scroller.prev();
      break;
  
    case 40: //next
      scroller.next();
      break;
  }
});

$(".wrapper").on("touchmove", e => e.preventDefault());

$("[data-scroll-to]").click(e => {
  e.preventDefault();

  const $this = $(e.currentTarget);
  const target = $this.attr("data-scroll-to");
  const reqSection = $(`[data-section-id=${target}]`);

  performTransition(reqSection.index());
})

if (isMobile) {
  $("body").swipe({
    swipe: function (event, direction) {
      const scroller = viewportScroller();
      let scrollDirection = "";
  
      if (direction === "up") scrolldirection = "next";
      if (direction === "down") scrolldirection = "prev";

      if (scrollDirection == "next" || scrollDirection == "prev") {
        scroller[scrolldirection]();  
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJlYXRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8g0L/QvtC40YHQuiDQutC90L7Qv9C60Lgg0L/QviDQuNC00LXQvdGC0LjRhNC40LrQsNGC0L7RgNGDXHJcbnZhciBoYW1idXJnZXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaGFtYnVyZ2VyJyk7XHJcblxyXG4vLyDQv9C+0LjRgdC6INC80LXQvdGOINC/0L4g0LjQtNC10L3RgtC40YTQuNC60LDRgtC+0YDRg1xyXG52YXIgaGFtYnVyZ2VyTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNoYW1idXJnZXJNZW51Jyk7XHJcbmxldCBsaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tZW51X19saW5rJyk7XHJcblxyXG4vLyDRgdC70YPRiNCw0LXQvCDRgdC+0LHRi9GC0LjRjyDQvdCwINC60L3QvtC/0LrQtVxyXG4vLyDQv9GA0Lgg0LrQu9C40LrQtSDRgdC90LjQvNCw0LXQvCDQuCDQstC+0LfQstGA0LDRidCw0LXQvCDQsNC60YLQuNCy0L3Ri9C5INC60LvQsNGB0YEg0L3QsCDQutC90L7Qv9C60YMg0Lgg0LzQtdC90Y5cclxuXHJcbmhhbWJ1cmdlckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRvZ2dsZU1lbnUpO1xyXG5cclxuZnVuY3Rpb24gdG9nZ2xlTWVudShldmVudCkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgaGFtYnVyZ2VyQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2hhbWJ1cmdlci0tYWN0aXZlJyk7XHJcbiAgaGFtYnVyZ2VyTWVudS5jbGFzc0xpc3QudG9nZ2xlKCdtZW51LS1hY3RpdmUnKTtcclxufTtcclxuXHJcbmxpbmtzLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xyXG4gIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnbGVNZW51KTtcclxufSk7XHJcblxyXG4vL9Ch0LvQsNC50LTQtdGALdC60LDRgNGD0YHQtdC70YxcclxuXHJcbmNvbnN0IHNsaWRlciA9ICQoJy5vZmZlcnMnKS5ieFNsaWRlcih7XHJcbiAgcGFnZXI6IGZhbHNlLFxyXG4gIGNvbnRyb2xzOiBmYWxzZVxyXG59KTtcclxuXHJcbiQoJy5vZmZlcnMtc2xpZGVyX19hcnJvdy0tbGVmdCcpLmNsaWNrKGUgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgc2xpZGVyLmdvVG9QcmV2U2xpZGUoKTtcclxufSk7XHJcblxyXG4kKCcub2ZmZXJzLXNsaWRlcl9fYXJyb3ctLXJpZ2h0JykuY2xpY2soZSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBzbGlkZXIuZ29Ub05leHRTbGlkZSgpO1xyXG59KTtcclxuXHJcbi8v0KHQu9Cw0LnQtNGI0L7RgyAtINC/0LXRgNC10LrQu9GO0YfQtdC90LjQtVxyXG5jb25zdCBmaW5kQmxvY2tCeUFsaWFzID0gKGFsaWFzKSA9PiB7XHJcbiAgcmV0dXJuICQoXCIucmV2aWV3c19faXRlbVwiKS5maWx0ZXIoKG5keCwgaXRlbSkgPT4ge1xyXG4gICAgcmV0dXJuICQoaXRlbSkuYXR0cihcImRhdGEtY2hhaW5cIikgPT09IGFsaWFzO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuJChcIi5yZXZpZXdzLXN3aXRjaGVyX19saW5rXCIpLmNsaWNrKChlKSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBjb25zdCAkdGhpcyA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcclxuICBjb25zdCB0YXJnZXQgPSAkdGhpcy5hdHRyKFwiZGF0YS1vcGVuXCIpO1xyXG4gIGNvbnN0IGl0ZW1Ub1Nob3cgPSBmaW5kQmxvY2tCeUFsaWFzKHRhcmdldCk7XHJcbiAgY29uc3QgY3VySXRlbSA9ICR0aGlzLmNsb3Nlc3QoXCIucmV2aWV3cy1zd2l0Y2hlcl9faXRlbVwiKTtcclxuXHJcbiAgaXRlbVRvU2hvdy5hZGRDbGFzcyhcImFjdGl2ZVwiKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIGN1ckl0ZW0uYWRkQ2xhc3MoXCJhY3RpdmVcIikuc2libGluZ3MoKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxufSk7XHJcblxyXG4vL9CS0LXRgNGC0LjQutCw0LvRjNC90YvQuSDQsNC60LrQvtGA0LTQtdC+0L1cclxuY29uc3Qgb3Blbkl0ZW0gPSAoaXRlbSkgPT4ge1xyXG4gIGNvbnN0IGNvbnRhaW5lciA9IGl0ZW0uY2xvc2VzdChcIi50ZWFtX19pdGVtXCIpO1xyXG4gIGNvbnN0IGNvbnRlbnRCbG9jayA9IGNvbnRhaW5lci5maW5kKFwiLnRlYW1fX2NvbnRlbnRcIik7XHJcbiAgY29uc3QgdGV4dEJsb2NrID0gY29udGVudEJsb2NrLmZpbmQoXCIudGVhbV9fY29udGVudC1ibG9ja1wiKTtcclxuICBjb25zdCByZXFIZWlnaHQgPSB0ZXh0QmxvY2suaGVpZ2h0KCk7XHJcblxyXG4gIGNvbnRhaW5lci5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICBjb250ZW50QmxvY2suaGVpZ2h0KHJlcUhlaWdodCk7XHJcbn07XHJcblxyXG5jb25zdCBjbG9zZUV2ZXJ5SXRlbSA9IChjb250YWluZXIpID0+IHtcclxuICBjb25zdCBpdGVtcyA9IGNvbnRhaW5lci5maW5kKFwiLnRlYW1fX2NvbnRlbnRcIik7XHJcbiAgY29uc3QgaXRlbUNvbnRhaW5lciA9IGNvbnRhaW5lci5maW5kKFwiLnRlYW1fX2l0ZW1cIik7XHJcblxyXG4gIGl0ZW1Db250YWluZXIucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgaXRlbXMuaGVpZ2h0KDApO1xyXG59O1xyXG5cclxuJCgnLnRlYW1fX3RpdGxlJykuY2xpY2soKGUpID0+IHtcclxuICBjb25zdCAkdGhpcyA9ICQoZS5jdXJyZW50VGFyZ2V0KTtcclxuICBjb25zdCBjb250YWluZXIgPSAkdGhpcy5jbG9zZXN0KCcudGVhbScpO1xyXG4gIGNvbnN0IGVsZW1Db250YWluZXIgPSAkdGhpcy5jbG9zZXN0KFwiLnRlYW1fX2l0ZW1cIik7XHJcbiAgXHJcbiAgaWYgKGVsZW1Db250YWluZXIuaGFzQ2xhc3MoXCJhY3RpdmVcIikpIHtcclxuICAgIGNsb3NlRXZlcnlJdGVtKGNvbnRhaW5lcik7XHJcbiAgfSBlbHNlIHtcclxuICAgIGNsb3NlRXZlcnlJdGVtKGNvbnRhaW5lcik7XHJcbiAgICBvcGVuSXRlbSgkdGhpcyk7XHJcbiAgfVxyXG59KTsgXHJcblxyXG4vL9Ck0L7RgNC80LBcclxuY29uc3QgdmFsaWRhdGVGaWVsZHMgPSAoZm9ybSwgZmllbGRzQXJyYXkpID0+IHtcclxuICBmaWVsZHNBcnJheS5mb3JFYWNoKChmaWVsZCkgPT4ge1xyXG4gICAgZmllbGQucmVtb3ZlQ2xhc3MoXCJpbnB1dC1lcnJvclwiKTtcclxuICAgIGlmIChmaWVsZC52YWwoKS50cmltKCkgPT09IFwiXCIpIHtcclxuICAgICAgZmllbGQuYWRkQ2xhc3MoXCJpbnB1dC1lcnJvclwiKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgY29uc3QgZXJyb3JGaWVsZHMgPSBmb3JtLmZpbmQoXCIuaW5wdXQtZXJyb3JcIik7XHJcblxyXG4gIHJldHVybiBlcnJvckZpZWxkcy5sZW5ndGggPT09IDA7XHJcbn1cclxuXHJcbiQoXCIuZm9ybVwiKS5zdWJtaXQoZSA9PiB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICBjb25zdCBmb3JtID0gJChlLmN1cnJlbnRUYXJnZXQpO1xyXG4gIGNvbnN0IG5hbWUgPSBmb3JtLmZpbmQoXCJbbmFtZT0nbmFtZSddXCIpO1xyXG4gIGNvbnN0IHBob25lID0gZm9ybS5maW5kKFwiW25hbWU9J3Bob25lJ11cIik7XHJcbiAgY29uc3QgY29tbWVudCA9IGZvcm0uZmluZChcIltuYW1lPSdjb21tZW50J11cIik7XHJcbiAgY29uc3QgdG8gPSBmb3JtLmZpbmQoXCJbbmFtZT0ndG8nXVwiKTtcclxuXHJcbiAgY29uc3QgbW9kYWwgPSAkKFwiI21vZGFsXCIpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBtb2RhbC5maW5kKFwiLm1vZGFsX19jb250ZW50XCIpO1xyXG5cclxuICBtb2RhbC5yZW1vdmVDbGFzcyhcImVycm9yLW1vZGFsXCIpO1xyXG5cclxuICBjb25zdCBpc1ZhbGlkID0gdmFsaWRhdGVGaWVsZHMoZm9ybSwgW25hbWUsIHBob25lLCBjb21tZW50LCB0b10pO1xyXG5cclxuICBpZiAoaXNWYWxpZCkge1xyXG4gICAgY29uc3QgcmVxdWVzdCA9ICQuYWpheCh7XHJcbiAgICAgIHVybDogXCJodHRwczovL3dlYmRldi1hcGkubG9mdHNjaG9vbC5jb20vc2VuZG1haWxcIixcclxuICAgICAgbWV0aG9kOiBcInBvc3RcIixcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIG5hbWU6IG5hbWUudmFsKCksXHJcbiAgICAgICAgcGhvbmU6IHBob25lLnZhbCgpLFxyXG4gICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQudmFsKCksXHJcbiAgICAgICAgdG86IHRvLnZhbCgpLFxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJlcXVlc3QuZG9uZSgoZGF0YSkgPT4ge1xyXG4gICAgICBjb250ZW50LnRleHQoZGF0YS5tZXNzYWdlKTtcclxuICAgIH0pO1xyXG4gICAgcmVxdWVzdC5mYWlsKChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBkYXRhLnJlc3BvbnNlSlNPTi5tZXNzYWdlO1xyXG4gICAgICBjb250ZW50LnRleHQobWVzc2FnZSk7XHJcbiAgICAgIG1vZGFsLmFkZENsYXNzKFwiZXJyb3ItbW9kYWxcIik7XHJcbiAgICB9KTtcclxuICAgIHJlcXVlc3QuYWx3YXlzKCgpID0+IHtcclxuICAgICAgJC5mYW5jeWJveC5vcGVuKHtcclxuICAgICAgICBzcmM6IFwiI21vZGFsXCIsXHJcbiAgICAgICAgdHlwZTogXCJpbmxpbmVcIlxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufSk7XHJcblxyXG4kKFwiLmFwcC1zdWJtaXQtYnRuXCIpLmNsaWNrKGUgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgJC5mYW5jeWJveC5jbG9zZSgpO1xyXG59KTtcclxuXHJcbi8v0JPQvtGA0LjQt9C+0L3RgtCw0LvRjNC90YvQuSDQsNC60LrQvtGA0LTQtdC+0L1cclxuY29uc3QgbWVzdXJlV2lkdGggPSAodW5pdCkgPT4ge1xyXG4gIGxldCByZXFVbml0V2lkdGggPSAwO1xyXG4gIGNvbnN0IHNjcmVlbldpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XHJcbiAgY29uc3QgY29udGFpbmVyID0gdW5pdC5jbG9zZXN0KFwiLnByb2R1Y3RzX19saXN0XCIpO1xyXG4gIGNvbnN0IHRpdGxlc0Jsb2NrcyA9IGNvbnRhaW5lci5maW5kKFwiLnByb2R1Y3RfX3RpdGxlXCIpO1xyXG4gIGNvbnN0IHRpdGxlc1dpZHRoID0gdGl0bGVzQmxvY2tzLndpZHRoKCkgKiB0aXRsZXNCbG9ja3MubGVuZ3RoO1xyXG5cclxuICBjb25zdCB0ZXh0Q29udGFpbmVyID0gdW5pdC5maW5kKFwiLnByb2R1Y3RfX2NvbnRhaW5lclwiKTtcclxuICBjb25zdCBwYWRkaW5nTGVmdCA9IHBhcnNlSW50KHRleHRDb250YWluZXIuY3NzKFwicGFkZGluZy1sZWZ0XCIpKTtcclxuICBjb25zdCBwYWRkaW5nUmlnaHQgPSBwYXJzZUludCh0ZXh0Q29udGFpbmVyLmNzcyhcInBhZGRpbmctcmlnaHRcIikpO1xyXG5cclxuICBjb25zdCBpc1RhYmxldCA9IHdpbmRvdy5tYXRjaE1lZGlhKFwiKG1heC13aWR0aDogNzY4cHgpXCIpLm1hdGNoZXM7XHJcbiAgY29uc3QgaXNNb2JpbGUgPSB3aW5kb3cubWF0Y2hNZWRpYShcIihtYXgtd2lkdGg6IDQ4MHB4KVwiKS5tYXRjaGVzO1xyXG4gIFxyXG4gIGlmIChpc1RhYmxldCkge1xyXG4gICAgcmVxVW5pdFdpZHRoID0gc2NyZWVuV2lkdGggLSB0aXRsZXNXaWR0aDtcclxuICB9IFxyXG4gIGlmIChpc01vYmlsZSkge1xyXG4gICAgcmVxVW5pdFdpZHRoID0gc2NyZWVuV2lkdGggLSB0aXRsZXNCbG9ja3Mud2lkdGgoKTtcclxuICB9IFxyXG4gIFxyXG4gIGlmICghaXNUYWJsZXQgJiYgIWlzTW9iaWxlKSB7XHJcbiAgICByZXFVbml0V2lkdGggPSA1MjQ7XHJcbiAgfVxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgY29udGFpbmVyOiByZXFVbml0V2lkdGgsXHJcbiAgICB0ZXh0Q29udGFpbmVyOiByZXFVbml0V2lkdGggLSBwYWRkaW5nUmlnaHQgLSBwYWRkaW5nTGVmdFxyXG4gIH1cclxufTtcclxuXHJcbmNvbnN0IGNsb3NlRXZlcnlVbml0SW5Db250YWluZXIgPSBjb250YWluZXIgPT4ge1xyXG4gIGNvbnN0IHVuaXRzID0gY29udGFpbmVyLmZpbmQoXCIucHJvZHVjdHNfX2l0ZW1cIik7XHJcbiAgY29uc3QgY29udGVudCA9IGNvbnRhaW5lci5maW5kKFwiLnByb2R1Y3RfX2NvbnRlbnRcIik7XHJcblxyXG4gIHVuaXRzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIGNvbnRlbnQud2lkdGgoMCk7XHJcbn07XHJcblxyXG5jb25zdCBvcGVuVW5pdCA9ICh1bml0KSA9PiB7XHJcbiAgY29uc3QgaGlkZGVuQ29udGVudCA9IHVuaXQuZmluZChcIi5wcm9kdWN0X19jb250ZW50XCIpO1xyXG4gIGNvbnN0IHJlcVdpZHRoID0gbWVzdXJlV2lkdGgodW5pdCk7XHJcbiAgY29uc3QgdGV4dEJsb2NrID0gdW5pdC5maW5kKFwiLnByb2R1Y3RfX2NvbnRhaW5lclwiKTtcclxuXHJcbiAgdW5pdC5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICBoaWRkZW5Db250ZW50LndpZHRoKHJlcVdpZHRoLmNvbnRhaW5lcik7XHJcbiAgdGV4dEJsb2NrLndpZHRoKHJlcVdpZHRoLnRleHRDb250YWluZXIpO1xyXG59O1xyXG5cclxuJChcIi5wcm9kdWN0X190aXRsZVwiKS5vbihcImNsaWNrXCIsIGUgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgY29uc3QgJHRoaXMgPSAkKGUuY3VycmVudFRhcmdldCk7XHJcbiAgY29uc3QgdW5pdCA9ICR0aGlzLmNsb3Nlc3QoXCIucHJvZHVjdFwiKTtcclxuICBjb25zdCB1bml0T3BlbmVkID0gdW5pdC5oYXNDbGFzcyhcImFjdGl2ZVwiKTtcclxuICBjb25zdCBjb250YWluZXIgPSAkdGhpcy5jbG9zZXN0KFwiLnByb2R1Y3RzX19saXN0XCIpO1xyXG5cclxuICBpZiAodW5pdE9wZW5lZCkge1xyXG4gICAgY2xvc2VFdmVyeVVuaXRJbkNvbnRhaW5lcihjb250YWluZXIpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjbG9zZUV2ZXJ5VW5pdEluQ29udGFpbmVyKGNvbnRhaW5lcik7XHJcbiAgICBvcGVuVW5pdCh1bml0KTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy/QktC40LTQtdC+0L/Qu9C10LXRgFxyXG5sZXQgdmlkZW87XHJcbmxldCBkdXJhdGlvbkNvbnRyb2w7XHJcbmxldCBzb3VuZENvbnRyb2w7XHJcbmxldCBpbnRlcnZhbElkO1xyXG5cclxuLy8g0LrQvdC+0L/QutC4XHJcbmNvbnN0IHBsYXlCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnZpZGVvX19wbGF5ZXItaW1nXCIpO1xyXG5jb25zdCBzb3VuZEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc291bmRcIik7XHJcbmNvbnN0IHBsYXllclBsYXlCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmR1cmF0aW9uX19pbWdcIik7XHJcblxyXG5cclxudmlkZW8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBsYXllclwiKTtcclxuXHJcbi8vINC60LDQuiDRgtC+0LvRjNC60L4g0L/Qu9C10LXRgCDQt9Cw0LPRgNGD0LfQuNGC0YHRj1xyXG4vLyB2aWRlby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRkYXRhJywgZnVuY3Rpb24oKSB7XHJcbiAgICAvLyDQstC10YjQsNC10Lwg0L7QsdGA0LDQsdC+0YLRh9C40Log0YHQvtCx0YvRgtC40Y8gb25jbGljayDQvdCwINGC0LXQsyB2aWRlb1xyXG4gICAgdmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBwbGF5U3RvcCk7XHJcblxyXG4gICAgLy8g0L7QsdGA0LDQsdC+0YLRh9C40LrQuCDRgdC+0LHRi9GC0LjQuSDQtNC70Y8g0LrQvdC+0L/QvtC6IHBsYXlcclxuICAgIGxldCBwbGF5QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucGxheVwiKTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGxheUJ1dHRvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBwbGF5QnV0dG9uc1tpXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHBsYXlTdG9wKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRgdC+0LHRi9GC0LjQuSDQtNC70Y8g0LrQvdC+0L/QutC4INC00LjQvdCw0LzQuNC6XHJcbiAgICBsZXQgbWljQ29udHJvbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWljXCIpO1xyXG4gICAgbWljQ29udHJvbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNvdW5kT2YpO1xyXG5cclxuICAgIC8vINC+0LHRgNCw0LHQvtGC0YfQuNC60Lgg0YHQvtCx0YvRgtC40Lkg0LTQu9GPINC/0L7Qu9C30YPQvdC60LAg0L/RgNC+0LTQvtC70LbQuNGC0LXQu9GM0L3QvtGB0YLQuCDQstC40LTQtdC+XHJcbiAgICBkdXJhdGlvbkNvbnRyb2wgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImR1cmF0aW9uTGV2ZWxcIik7XHJcbiAgICBkdXJhdGlvbkNvbnRyb2wuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBzZXRWaWRlb0R1cmF0aW9uKTtcclxuXHJcbiAgICBkdXJhdGlvbkNvbnRyb2wubWluID0gMDtcclxuICAgIGR1cmF0aW9uQ29udHJvbC52YWx1ZSA9IDA7XHJcbiAgICAvLyDQv9GA0LjRgdCy0LDQuNCy0LDQtdC8INC/0L7Qu9C30YPQvdC60YMg0L/RgNC+0LTQvtC70LbQuNGC0LXQu9GM0L3QvtGB0YLQuCDQvNCw0LrRgdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDRgNCw0LLQvdC+0LUg0L/RgNC+0LTQvtC70LbQuNGC0LXQu9GM0L3QvtGB0YLQuCDQvdCw0YjQtdCz0L4g0LLQuNC00LXQviAo0LIg0YHQtdC60YPQvdC00LDRhSlcclxuICAgIGR1cmF0aW9uQ29udHJvbC5tYXggPSB2aWRlby5kdXJhdGlvbjtcclxuXHJcbiAgICAvLyDQvtCx0YDQsNCx0L7RgtGH0LjQutC4INGB0L7QsdGL0YLQuNC5INC00LvRjyDQv9C+0LvQt9GD0L3QutCwINCz0YDQvtC80L7QutC+0YHRgtC4XHJcbiAgICBzb3VuZENvbnRyb2wgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1pY0xldmVsXCIpO1xyXG4gICAgc291bmRDb250cm9sLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgY2hhbmdlU291bmRWb2x1bWUpO1xyXG4gICAgLy8gc291bmRDb250cm9sLmFkZEV2ZW50TGlzdGVuZXIoJ29ubW91c2Vtb3ZlJywgY2hhbmdlU291bmRWb2x1bWUpO1xyXG5cclxuICAgIC8vINC30LDQtNCw0LXQvCDQvNCw0LrRgdC40LzQsNC70YzQvdGL0LUg0Lgg0LzQuNC90LjQvNCw0LvRjNC90YvQtSDQt9C90LDRh9C10L3QuNGPINCz0YDQvtC80L7QutC+0YHRgtC4XHJcbiAgICBzb3VuZENvbnRyb2wubWluID0gMDtcclxuICAgIHNvdW5kQ29udHJvbC5tYXggPSAxMDtcclxuICAgIC8vIHNvdW5kQ29udHJvbC5zdGVwID0gMTtcclxuICAgIC8vINC/0YDQuNGB0LLQsNC40LLQsNC10Lwg0L/QvtC70LfRg9C90LrRgyDQvNCw0LrRgdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtVxyXG4gICAgc291bmRDb250cm9sLnZhbHVlID0gc291bmRDb250cm9sLm1heDtcclxuXHJcblxyXG4gICAgLy/QvtCx0YDQsNCx0LDRgtGL0LLQsNC10Lwg0L7QutC+0L3Rh9Cw0L3QuNC1INCy0LjQtNC10L5cclxuICAgIHZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoJ2VuZGVkJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcGxheUJ0bi5jbGFzc0xpc3QudG9nZ2xlKFwidmlkZW9fX3BsYXllci1pbWctLWFjdGl2ZVwiKTtcclxuICAgICAgICB2aWRlby5jdXJyZW50VGltZSA9IDA7XHJcbiAgICAgICAgcGxheWVyUGxheUJ0bi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgIH0pO1xyXG4vLyB9KTtcclxuXHJcblxyXG5cclxuLypcclxuINCS0L7RgdC/0YDQvtC40LfQstC10LTQtdC90LjQtSDQstC40LTQtdC+XHJcbiovXHJcbmZ1bmN0aW9uIHBsYXlTdG9wKCkge1xyXG4gICAgLy8g0L/QvtC60LDQt9GL0LLQsNC10YIg0LjQu9C4INGB0LrRgNGL0LLQsNC10YIg0LHQtdC70YPRjiDQutC90L7Qv9C60YMgcGxheVxyXG4gICAgcGxheUJ0bi5jbGFzc0xpc3QudG9nZ2xlKFwidmlkZW9fX3BsYXllci1pbWctLWFjdGl2ZVwiKTtcclxuXHJcbiAgICAvLyDQv9GA0L7QstC10YDQuNC8INGB0YLQvtC40YIg0LvQuCDQstC40LTQtdC+INC90LAg0L/QsNGD0LfQtSwg0LXRgdC70Lgg0LTQsCDRgtC+INC/0YDQvtC00L7Qu9C20LjQvCDQstC+0YHQv9GA0L7QuNC30LLQtdC00LXQvdC40LUuXHJcblxyXG4gICAgaWYgKHZpZGVvLnBhdXNlZCkge1xyXG4gICAgICAgIC8vINC30LDQv9GD0YHQutCw0LXQvCDQstC40LTQtdC+XHJcbiAgICAgICAgdmlkZW8ucGxheSgpO1xyXG4gICAgICAgIC8vINCS0LrQu9GO0YfQsNC10Lwg0YTRg9C90LrRhtC40Y4g0L7QsdC90L7QstC70LXQvdC40Y8g0L/RgNC+0LPRgNC10YHRgdCwXHJcbiAgICAgICAgaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKHVwZGF0ZUR1cmF0aW9uLCAxMDAwIC8gNjApO1xyXG4gICAgICAgIC8vINC/0YDQtdCy0YDQsNGJ0LDQtdC8INC80LDQu9C10L3RjNC60YPRjiDQutC90L7Qv9C60YMgcGxheSDQsiBwYXVzZVxyXG4gICAgICAgIHBsYXllclBsYXlCdG4uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgLy8g0JXRgdC70LgsINC90LDQvtCx0L7RgNC+0YIsINC/0YDQvtC40LPRgNGL0LDQstGL0LXRgtGB0Y8sINGC0L4g0L7RgdGC0LDQvdC+0LLQuNC8LlxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyDQvtGB0YLQsNC90LDQstC70LjQstCw0LXQvCDQstC40LTQtdC+XHJcbiAgICAgICAgdmlkZW8ucGF1c2UoKTtcclxuICAgICAgICAvLyDQvtGB0YLQsNC90LDQstC70LjQstCw0LXQvCDQvtCx0L3QvtCy0LvQtdC90LjQtSDQv9GA0L7Qs9GA0LXRgdGB0LBcclxuICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpO1xyXG4gICAgICAgIC8vINC/0YDQtdCy0YDQsNGJ0LDQtdC8INC80LDQu9C10L3RjNC60YPRjiDQutC90L7Qv9C60YMgcGF1c2Ug0LIgcGxheVxyXG4gICAgICAgIHBsYXllclBsYXlCdG4uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qXHJcbiAgICDQoNC10LDQu9C40LfRg9C10YIg0LLQvtC30LzQvtC20L3QvtGB0YLRjCDQv9C10YDQtdC80L7RgtC60Lgg0L3QsNGI0LXQs9C+INCy0LjQtNC10L5cclxuKi9cclxuZnVuY3Rpb24gc2V0VmlkZW9EdXJhdGlvbigpIHtcclxuICAgIC8vINGD0YHRgtCw0L3QvtCy0LjRgtGMINC30L3QsNGH0LXQvdC40LUg0L/QvtC70LfRg9C90LrQsCDQsiDRgtC10LrRg9GJ0LXQtSDQstGA0LXQvNGPXHJcbiAgICB2aWRlby5jdXJyZW50VGltZSA9IGR1cmF0aW9uQ29udHJvbC52YWx1ZTtcclxuICAgIHVwZGF0ZUR1cmF0aW9uKCk7XHJcbiAgICAvLyBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwodXBkYXRlRHVyYXRpb24sIDEwMDAgLyA2MCk7XHJcbn1cclxuXHJcblxyXG4vKlxyXG4gINCk0YPQvdC60YbQuNGPINC00LvRjyDQvtCx0L3QvtCy0LvQtdC90LjRjyDQv9C+0LfQuNGG0LjQuCDQv9C+0LvQt9GD0L3QutCwINC/0YDQvtC00L7Qu9C20LjRgtC10LvRjNC90L7RgdGC0Lgg0LLQuNC00LXQvi4gICBcclxuKi9cclxuZnVuY3Rpb24gdXBkYXRlRHVyYXRpb24oKSB7XHJcbiAgICAvLyDRg9GB0YLQsNC90LDQstC70LjQstCw0LXQvCDQsiDQvdCw0Ygg0LjQvdC/0YPRgiDRgtC10LrRg9GJ0LXQtSDQstGA0LXQvNGPXHJcbiAgICBkdXJhdGlvbkNvbnRyb2wudmFsdWUgPSB2aWRlby5jdXJyZW50VGltZTtcclxuICAgIC8vINGA0LDRgdGB0YfQuNGC0YvQstCw0LXQvCDQv9GA0L7RhtC10L3RgiDQtNC70Y8g0LfQsNC60YDQsNGB0LrQuCDQv9GA0L7Qs9GA0LXRgdGB0LBcclxuICAgIGxldCBzdGVwID0gdmlkZW8uZHVyYXRpb24gLyAxMDA7XHJcbiAgICBsZXQgcGVyY2VudCA9IHZpZGVvLmN1cnJlbnRUaW1lIC8gc3RlcDtcclxuICAgIC8vINGD0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdC8INGB0YLQuNC70LhcclxuICAgIGR1cmF0aW9uQ29udHJvbC5zdHlsZS5iYWNrZ3JvdW5kID0gYGxpbmVhci1ncmFkaWVudCg5MGRlZywgI0ZFREIzRiAwJSwgI0ZFREIzRiAke3BlcmNlbnR9JSwgIzYyNjI2MiAke3BlcmNlbnR9JSlgO1xyXG5cclxufVxyXG5cclxuXHJcbi8qXHJcbiAgICDQo9C/0YDQsNCy0LvQtdC90LjQtSDQt9Cy0YPQutC+0LxcclxuKi9cclxuZnVuY3Rpb24gc291bmRPZigpIHtcclxuICAgIC8qXHJcbiAgICAgICAg0JTQtdC70LDQtdC8INC/0YDQvtCy0LXRgNC60YMg0YPRgNC+0LLQvdGPINCz0YDQvtC80LrQvtGB0YLQuC4gXHJcbiAgICAgICAg0JXRgdC70Lgg0YMg0L3QsNGBINC90LDRiNC10LPQviDQstC40LTQtdC+INC10YHRgtGMINC30LLRg9C6LCDRgtC+INC80Ysg0LXQs9C+INCy0YvQutC70Y7Rh9Cw0LXQvC4gXHJcbiAgICAgICAg0J/RgNC10LTQstCw0YDQuNGC0LXQu9GM0L3QviDQt9Cw0L/QvtC80L3QuNCyINGC0LXQutGD0YnRg9GOINC/0L7Qt9C40YbQuNGOINCz0YDQvtC80LrQvtGB0YLQuCDQsiDQv9C10YDQtdC80LXQvdC90YPRjiBzb3VuZExldmVsXHJcbiAgICAqL1xyXG4gICAgaWYgKHZpZGVvLnZvbHVtZSA9PT0gMCkge1xyXG4gICAgICAgIHZpZGVvLnZvbHVtZSA9IHNvdW5kTGV2ZWw7XHJcbiAgICAgICAgc291bmRDb250cm9sLnZhbHVlID0gc291bmRMZXZlbCAqIDEwO1xyXG4gICAgICAgIHNvdW5kQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvKlxyXG4gICAgICAgICAgICDQldGB0LvQuCDRgyDQvdCw0YjQtdCz0L4g0LLQuNC00LXQviDQvdC10YIg0LfQstGD0LrQsCwg0YLQviDQstGL0YHRgtCw0LLQu9GP0LXQvCDRg9GA0L7QstC10L3RjCDQs9GA0L7QvNC60L7RgdGC0Lgg0L3QsCDQv9GA0LXQttC90LjQuSDRg9GA0L7QstC10L3RjC5cclxuICAgICAgICAgICAg0KXRgNCw0L3QuNGC0YHRjyDQsiDQv9C10YDQvNC10L3QvdC+0Lkgc291bmRMZXZlbFxyXG4gICAgICAgICovXHJcbiAgICAgICAgc291bmRMZXZlbCA9IHZpZGVvLnZvbHVtZTtcclxuICAgICAgICB2aWRlby52b2x1bWUgPSAwO1xyXG4gICAgICAgIHNvdW5kQ29udHJvbC52YWx1ZSA9IDA7XHJcbiAgICAgICAgc291bmRCdG4uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG4vKlxyXG4gICAg0KPQv9GA0LDQstC70LXQvdC40LUg0LfQstGD0LrQvtC8INCy0LjQtNC10L5cclxuKi9cclxuZnVuY3Rpb24gY2hhbmdlU291bmRWb2x1bWUoKSB7XHJcbiAgICAvKlxyXG4gICAgICAgINCh0LIt0LLQviB2b2x1bWUg0LzQvtC20LXRgiDQv9GA0LjQvdC40LzQsNGC0Ywg0LfQvdCw0YfQtdC90LjRjyDQvtGCIDAg0LTQviAxXHJcbiAgICAgICAg0JTQtdC70LjQvCDQvdCwIDEwINC00LvRjyDRgtC+0LPQviDRh9GC0L4g0LHRiywg0LHRi9C70LAg0LLQvtC30LzQvtC20L3QvtGB0YLRjCDQsdC+0LvQtdC1INGC0L7Rh9C90L7QuSDRgNC10LPRg9C70LjRgNC+0LLQutC4INCy0LjQtNC10L4uIFxyXG4gICB2aWRlby52b2x1bWUgMCAuLi4uIDEgXHJcbiAgIHNvdW5kQ29udHJvbCAwIC4uLi4gMTBcclxuICAgICAgICAqL1xyXG5cclxuICAgIHZpZGVvLnZvbHVtZSA9IHNvdW5kQ29udHJvbC52YWx1ZSAvIDEwO1xyXG4gICAgaWYgKHZpZGVvLnZvbHVtZSA9PSAwKSB7XHJcbiAgICAgICAgc291bmRCdG4uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNvdW5kQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2coJ9C30L3QsNGH0LXQvdC40LUgdm9sdW1lINGDINCy0LjQtNC10L4gJyArIHZpZGVvLnZvbHVtZSk7XHJcbiAgICBjb25zb2xlLmxvZygn0LfQvdCw0YfQtdC90LjQtSB2YWx1ZSDRgyBtaWNMZXZlbCAnICsgc291bmRDb250cm9sLnZhbHVlIC8gMTApO1xyXG4gICAgLyoq0KMg0L/QvtC70LfRg9C90LrQsCDQuNC30L3QsNGH0LDQu9GM0L3QviDQt9Cw0LTQsNC90L4g0LzQuNC90LjQvNCw0LvRjNC90L7QtSDQt9C90LDRh9C10L3QuNC1IDAg0Lgg0LzQsNC60YHQuNC80LDQu9GM0L3QvtC1IDEwINGH0YLQvtCxINC00LDRgtGMINC90LDQvCAxMCDQv9C+0LvQvtC20LXQvdC40LlcclxuICAgICAqINGA0LXQs9GD0LvQuNGA0L7QstC60LhcclxuICAgICAqL1xyXG59XHJcblxyXG4vL9Ca0LDRgNGC0LBcclxubGV0IG15TWFwO1xyXG5jb25zdCBpbml0ID0gKCkgPT4ge1xyXG4gbXlNYXAgPSBuZXcgeW1hcHMuTWFwKFwibWFwXCIsIHtcclxuICAgY2VudGVyOiBbNTUuNzUyMTMyLCAzNy42MjI4MDddLFxyXG4gICB6b29tOiAxMyxcclxuICAgY29udHJvbHM6IFtdLFxyXG4gfSk7XHJcbiBcclxuIGxldCBjb29yZHMgPSBbXHJcbiAgICAgWzU1Ljc1OTIxMSwgMzcuNTgyNjM3XSxcclxuICAgICBbNTUuNzQ5NjYyLCAzNy42MDM4ODldLFxyXG4gICAgIFs1NS43NDMwNjksIDM3LjU4MDk4N10sXHJcbiAgICAgWzU1Ljc1NjkxNywgMzcuNjIwNjE5XSxcclxuICAgXSxcclxuICAgbXlDb2xsZWN0aW9uID0gbmV3IHltYXBzLkdlb09iamVjdENvbGxlY3Rpb24oe30sIHtcclxuICAgICBkcmFnZ2FibGU6IGZhbHNlLFxyXG4gICAgIGljb25MYXlvdXQ6ICdkZWZhdWx0I2ltYWdlJyxcclxuICAgICBpY29uSW1hZ2VIcmVmOiAnLi9pbWcvaWNvbnMvbWFya2VyLnN2ZycsXHJcbiAgICAgaWNvbkltYWdlU2l6ZTogWzU4LCA3M10sXHJcbiAgICAgaWNvbkltYWdlT2Zmc2V0OiBbLTM1LCAtNTJdXHJcbiAgIH0pO1xyXG4gXHJcbiBmb3IgKGxldCBpID0gMDsgaSA8IGNvb3Jkcy5sZW5ndGg7IGkrKykge1xyXG4gICBteUNvbGxlY3Rpb24uYWRkKG5ldyB5bWFwcy5QbGFjZW1hcmsoY29vcmRzW2ldKSk7XHJcbiB9XHJcbiBcclxuIG15TWFwLmdlb09iamVjdHMuYWRkKG15Q29sbGVjdGlvbik7XHJcbiBcclxuIG15TWFwLmJlaGF2aW9ycy5kaXNhYmxlKCdzY3JvbGxab29tJyk7XHJcbn07XHJcbiBcclxueW1hcHMucmVhZHkoaW5pdCk7XHJcblxyXG4vL09uZSBwYWdlIHNjcm9sbFxyXG5jb25zdCBzZWN0aW9ucyA9ICQoXCJzZWN0aW9uXCIpO1xyXG5jb25zdCBkaXNwbGF5ID0gJChcIi5tYWluY29udGVudFwiKTtcclxuY29uc3Qgc2lkZU1lbnUgPSAkKFwiLmZpeGVkLW1lbnVcIik7XHJcbmNvbnN0IG1lbnVJdGVtcyA9IHNpZGVNZW51LmZpbmQoXCIuZml4ZWQtbWVudV9faXRlbVwiKTtcclxuXHJcbmNvbnN0IG1vYmlsZURldGVjdCA9IG5ldyBNb2JpbGVEZXRlY3Qod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpO1xyXG5jb25zdCBpc01vYmlsZSA9IG1vYmlsZURldGVjdC5tb2JpbGUoKTtcclxuXHJcbmxldCBpblNjcm9sbCA9IGZhbHNlO1xyXG5cclxuc2VjdGlvbnMuZmlyc3QoKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuXHJcbmNvbnN0IGNvdW50U2VjdGlvblBvc2l0aW9uID0gKHNlY3Rpb25FcSkgPT4ge1xyXG4gIGNvbnN0IHBvc2l0aW9uID0gc2VjdGlvbkVxICogLTEwMDtcclxuXHJcbiAgaWYgKGlzTmFOKHBvc2l0aW9uKSkge1xyXG4gICAgY29uc29sZS5lcnJvcihcItC/0LXRgNC10LTQsNC90L4g0L3QtdCy0LXRgNC90L7QtSDQt9C90LDRh9C10L3QuNC1INCyIGNvdW50U2VjdGlvblBvc2l0aW9uXCIpO1xyXG4gICAgcmV0dXJuIDA7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBwb3NpdGlvbjtcclxufTtcclxuXHJcbmNvbnN0IGNoYW5nZU1lbnVUaGVtZUZvclNlY3Rpb24gPSBzZWN0aW9uRXEgPT4ge1xyXG4gIGNvbnN0IGN1cnJlbnRTZWN0aW9uID0gc2VjdGlvbnMuZXEoc2VjdGlvbkVxKTtcclxuICBjb25zdCBtZW51VGhlbWUgPSBjdXJyZW50U2VjdGlvbi5hdHRyKFwiZGF0YS1zaWRlbWVudS10aGVtZVwiKTtcclxuICBjb25zdCBhY3RpdmVDbGFzcyA9IFwiZml4ZWQtbWVudS0tc2hhZG93ZWRcIjtcclxuXHJcbiAgaWYgKG1lbnVUaGVtZSA9PT0gXCJibGFja1wiKSB7XHJcbiAgICBzaWRlTWVudS5hZGRDbGFzcyhhY3RpdmVDbGFzcyk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHNpZGVNZW51LnJlbW92ZUNsYXNzKFwiZml4ZWQtbWVudS0tc2hhZG93ZWRcIik7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgcmVzZXRBY3RpdmVDbGFzc0Zvckl0ZW0gPSAoaXRlbXMsIGl0ZW1FcSwgYWN0aXZlQ2xhc3MpID0+IHtcclxuICBpdGVtcy5lcShpdGVtRXEpLmFkZENsYXNzKGFjdGl2ZUNsYXNzKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKGFjdGl2ZUNsYXNzKTtcclxufVxyXG5cclxuY29uc3QgcGVyZm9ybVRyYW5zaXRpb24gPSAoc2VjdGlvbkVxKSA9PiB7XHJcbiAgaWYgKGluU2Nyb2xsKSByZXR1cm47XHJcblxyXG4gIGNvbnN0IHRyYW5zaXRpb25PdmVyID0gMTAwMDtcclxuICBjb25zdCBtb3VzZUluZXJ0aWFPdmVyID0gMzAwO1xyXG5cclxuICBpblNjcm9sbCA9IHRydWU7XHJcblxyXG4gIGNvbnN0IHBvc2l0aW9uID0gY291bnRTZWN0aW9uUG9zaXRpb24oc2VjdGlvbkVxKTtcclxuXHJcbiAgY2hhbmdlTWVudVRoZW1lRm9yU2VjdGlvbihzZWN0aW9uRXEpO1xyXG5cclxuICBkaXNwbGF5LmNzcyh7XHJcbiAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGVZKCR7cG9zaXRpb259JSlgXHJcbiAgfSk7XHJcblxyXG4gIHJlc2V0QWN0aXZlQ2xhc3NGb3JJdGVtKHNlY3Rpb25zLCBzZWN0aW9uRXEsIFwiYWN0aXZlXCIpO1xyXG5cclxuICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgIGluU2Nyb2xsID0gZmFsc2U7XHJcblxyXG4gICAgcmVzZXRBY3RpdmVDbGFzc0Zvckl0ZW0obWVudUl0ZW1zLCBzZWN0aW9uRXEsIFwiZml4ZWQtbWVudV9faXRlbS0tYWN0aXZlXCIpO1xyXG4gIH0sIHRyYW5zaXRpb25PdmVyICsgbW91c2VJbmVydGlhT3Zlcik7XHJcbn07XHJcblxyXG5jb25zdCB2aWV3cG9ydFNjcm9sbGVyID0gKCkgPT4ge1xyXG4gIGNvbnN0IGFjdGl2ZVNlY3Rpb24gPSBzZWN0aW9ucy5maWx0ZXIoXCIuYWN0aXZlXCIpO1xyXG4gIGNvbnN0IG5leHRTZWN0aW9uID0gYWN0aXZlU2VjdGlvbi5uZXh0KCk7XHJcbiAgY29uc3QgcHJldlNlY3Rpb24gPSBhY3RpdmVTZWN0aW9uLnByZXYoKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIG5leHQoKSB7XHJcbiAgICAgIGlmIChuZXh0U2VjdGlvbi5sZW5ndGgpIHtcclxuICAgICAgICBwZXJmb3JtVHJhbnNpdGlvbihuZXh0U2VjdGlvbi5pbmRleCgpKVxyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgcHJldigpIHtcclxuICAgICAgaWYgKG5leHRTZWN0aW9uLmxlbmd0aCkge1xyXG4gICAgICAgIHBlcmZvcm1UcmFuc2l0aW9uKHByZXZTZWN0aW9uLmluZGV4KCkpXHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgfTtcclxufTtcclxuXHJcbiQod2luZG93KS5vbihcIndoZWVsXCIsIGUgPT4ge1xyXG4gIGNvbnN0IGRlbHRhWSA9IGUub3JpZ2luYWxFdmVudC5kZWx0YVk7XHJcbiAgY29uc3Qgc2Nyb2xsZXIgPSB2aWV3cG9ydFNjcm9sbGVyKCk7XHJcblxyXG4gIGlmIChkZWx0YVkgPiAwKSB7XHJcbiAgICBzY3JvbGxlci5uZXh0KCk7XHJcbiAgfVxyXG5cclxuICBpZiAoZGVsdGFZIDwgMCkge1xyXG4gICAgc2Nyb2xsZXIucHJldigpO1xyXG4gIH1cclxufSk7XHJcblxyXG4kKHdpbmRvdykub24oXCJrZXlkb3duXCIsIGUgPT4ge1xyXG4gIGNvbnN0IHRhZ05hbWUgPSBlLnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XHJcbiAgY29uc3QgdXNlclR5cGluZ0luSW5wdXRzID0gdGFnTmFtZSA9PT0gXCJpbnB1dFwiIHx8IHRhZ05hbWUgPT09IFwidGV4dGFyZWFcIjtcclxuICBjb25zdCBzY3JvbGxlciA9IHZpZXdwb3J0U2Nyb2xsZXIoKTtcclxuXHJcbiAgaWYgKHVzZXJUeXBpbmdJbklucHV0cykgcmV0dXJuO1xyXG5cclxuICBzd2l0Y2ggKGUua2V5Q29kZSkge1xyXG4gICAgY2FzZSAzODogLy9wcmV2XHJcbiAgICBzY3JvbGxlci5wcmV2KCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gIFxyXG4gICAgY2FzZSA0MDogLy9uZXh0XHJcbiAgICAgIHNjcm9sbGVyLm5leHQoKTtcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG59KTtcclxuXHJcbiQoXCIud3JhcHBlclwiKS5vbihcInRvdWNobW92ZVwiLCBlID0+IGUucHJldmVudERlZmF1bHQoKSk7XHJcblxyXG4kKFwiW2RhdGEtc2Nyb2xsLXRvXVwiKS5jbGljayhlID0+IHtcclxuICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gIGNvbnN0ICR0aGlzID0gJChlLmN1cnJlbnRUYXJnZXQpO1xyXG4gIGNvbnN0IHRhcmdldCA9ICR0aGlzLmF0dHIoXCJkYXRhLXNjcm9sbC10b1wiKTtcclxuICBjb25zdCByZXFTZWN0aW9uID0gJChgW2RhdGEtc2VjdGlvbi1pZD0ke3RhcmdldH1dYCk7XHJcblxyXG4gIHBlcmZvcm1UcmFuc2l0aW9uKHJlcVNlY3Rpb24uaW5kZXgoKSk7XHJcbn0pXHJcblxyXG5pZiAoaXNNb2JpbGUpIHtcclxuICAkKFwiYm9keVwiKS5zd2lwZSh7XHJcbiAgICBzd2lwZTogZnVuY3Rpb24gKGV2ZW50LCBkaXJlY3Rpb24pIHtcclxuICAgICAgY29uc3Qgc2Nyb2xsZXIgPSB2aWV3cG9ydFNjcm9sbGVyKCk7XHJcbiAgICAgIGxldCBzY3JvbGxEaXJlY3Rpb24gPSBcIlwiO1xyXG4gIFxyXG4gICAgICBpZiAoZGlyZWN0aW9uID09PSBcInVwXCIpIHNjcm9sbGRpcmVjdGlvbiA9IFwibmV4dFwiO1xyXG4gICAgICBpZiAoZGlyZWN0aW9uID09PSBcImRvd25cIikgc2Nyb2xsZGlyZWN0aW9uID0gXCJwcmV2XCI7XHJcblxyXG4gICAgICBpZiAoc2Nyb2xsRGlyZWN0aW9uID09IFwibmV4dFwiIHx8IHNjcm9sbERpcmVjdGlvbiA9PSBcInByZXZcIikge1xyXG4gICAgICAgIHNjcm9sbGVyW3Njcm9sbGRpcmVjdGlvbl0oKTsgIFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0iXX0=
